.\uk\ac\warwick\java\cs126\services\HashtagStore.java:11: error: ';' expected
    public boolean isEmpty(){return (tail == null || head == null)}
                                                                  ^
.\uk\ac\warwick\java\cs126\services\HashMap.java:6: error: cannot find symbol
public class HashMap<K extends Comparable<K>,V> implements IMap<K,V> {
                                                           ^
  symbol: class IMap
uk\ac\warwick\java\cs126\services\WeetStore.java:34: error: cannot find symbol
    Comparator<Weet> c = new Comparator<Weet>(){
    ^
  symbol:   class Comparator
  location: class WeetStore
uk\ac\warwick\java\cs126\services\WeetStore.java:34: error: cannot find symbol
    Comparator<Weet> c = new Comparator<Weet>(){
                             ^
  symbol:   class Comparator
  location: class WeetStore
uk\ac\warwick\java\cs126\services\WeetStore.java:66: error: cannot find symbol
        Pattern MY_PATTERN = Pattern.compile("#(\\S+)");
        ^
  symbol:   class Pattern
  location: class WeetStore
uk\ac\warwick\java\cs126\services\WeetStore.java:66: error: cannot find symbol
        Pattern MY_PATTERN = Pattern.compile("#(\\S+)");
                             ^
  symbol:   variable Pattern
  location: class WeetStore
uk\ac\warwick\java\cs126\services\WeetStore.java:67: error: cannot find symbol
        Matcher mat = MY_PATTERN.matcher(message);
        ^
  symbol:   class Matcher
  location: class WeetStore
uk\ac\warwick\java\cs126\services\WeetStore.java:77: error: cannot find symbol
        int hash = hash(u.getUserId());
                         ^
  symbol:   method getUserId()
  location: variable u of type WeetListElement<Weet>
uk\ac\warwick\java\cs126\services\WeetStore.java:79: error: incompatible types: ListElement<Weet> cannot be converted to WeetListElement<Weet>
            u.addNext(hashmapUserID[hash]);
                                   ^
uk\ac\warwick\java\cs126\services\WeetStore.java:81: error: incompatible types: WeetListElement<Weet> cannot be converted to ListElement<Weet>
        hashmapUserID[hash]=u;
                            ^
uk\ac\warwick\java\cs126\services\WeetStore.java:85: error: cannot find symbol
        int hash = hash(u.getId());
                         ^
  symbol:   method getId()
  location: variable u of type WeetListElement<Weet>
uk\ac\warwick\java\cs126\services\WeetStore.java:87: error: incompatible types: ListElement<Weet> cannot be converted to WeetListElement<Weet>
            u.addNext(hashmapWeetID[hash]);
                                   ^
uk\ac\warwick\java\cs126\services\WeetStore.java:89: error: incompatible types: WeetListElement<Weet> cannot be converted to ListElement<Weet>
        hashmapWeetID[hash]=u;
                            ^
uk\ac\warwick\java\cs126\services\WeetStore.java:93: error: cannot find symbol
        Date date= u.getDateWeeted();
                    ^
  symbol:   method getDateWeeted()
  location: variable u of type WeetListElement<Weet>
uk\ac\warwick\java\cs126\services\WeetStore.java:96: error: incompatible types: ListElement<Weet> cannot be converted to WeetListElement<Weet>
            u.addNext(hashmapDate[hash]);
                                 ^
uk\ac\warwick\java\cs126\services\WeetStore.java:98: error: incompatible types: WeetListElement<Weet> cannot be converted to ListElement<Weet>
        hashmapDate[hash]=u;
                          ^
uk\ac\warwick\java\cs126\services\WeetStore.java:159: error: incompatible types: ListElement<Weet> cannot be converted to WeetListElement<Weet>
        WeetListElement<Weet> ptr = hashmapWeetID[hash];
                                                 ^
uk\ac\warwick\java\cs126\services\WeetStore.java:172: error: incompatible types: WeetListElement<Weet> cannot be converted to ListElement<User>
        ListElement<User> ptr = head;
                                ^
uk\ac\warwick\java\cs126\services\WeetStore.java:177: error: incompatible types: User[] cannot be converted to Weet[]
        return tmp;
               ^
uk\ac\warwick\java\cs126\services\WeetStore.java:184: error: incompatible types: ListElement<Weet> cannot be converted to WeetListElement<User>
        WeetListElement<User> ptr = hashmapUserID[hash];
                                                 ^
uk\ac\warwick\java\cs126\services\WeetStore.java:186: error: cannot find symbol
            if (ptr.getValue().getUserId()==uid) {
                              ^
  symbol:   method getUserId()
  location: class User
uk\ac\warwick\java\cs126\services\WeetStore.java:187: error: incompatible types: User cannot be converted to Weet[]
                return ptr.getValue();
                                   ^
.\uk\ac\warwick\java\cs126\services\MergeSort.java:54: error: ')' expected
            if ( c.compare(left.get(leftIndex),right.get(rightIndex) > 0) {
                                                                         ^
.\uk\ac\warwick\java\cs126\services\MergeSort.java:5: error: cannot find symbol
    private final Comparator<E> c;
                  ^
  symbol:   class Comparator
  location: class MergeSort<E>
  where E is a type-variable:
    E extends Object declared in class MergeSort
.\uk\ac\warwick\java\cs126\services\MergeSort.java:7: error: cannot find symbol
    public MergeSort(ArrayList<E> input, Comparator<E> c) {
                                         ^
  symbol:   class Comparator
  location: class MergeSort<E>
  where E is a type-variable:
    E extends Object declared in class MergeSort
uk\ac\warwick\java\cs126\services\WeetStore.java:217: error: incompatible types: ListElement<Weet> cannot be converted to WeetListElement<Weet>
        WeetListElement<Weet> ptr = hashmapDate[hash];
                                               ^
.\uk\ac\warwick\java\cs126\services\MyLinkedList.java:74: error: not a statement
        E[this.size()] tmp;
         ^
.\uk\ac\warwick\java\cs126\services\MyLinkedList.java:74: error: ';' expected
        E[this.size()] tmp;
                      ^
.\uk\ac\warwick\java\cs126\services\MyLinkedList.java:74: error: not a statement
        E[this.size()] tmp;
                       ^
.\uk\ac\warwick\java\cs126\services\HashtagStore.java:53: error: incompatible types: cannot infer type arguments for HashtagStoreElement<>
            HashtagStoreElement<HashtagElement> tmp2 = new HashtagStoreElement<>(tmp2);
                                                                              ^
    reason: inference variable E has incompatible bounds
      equality constraints: HashtagElement
      lower bounds: HashtagStoreElement<HashtagElement>
  where E is a type-variable:
    E extends Object declared in class HashtagStoreElement
.\uk\ac\warwick\java\cs126\services\HashtagStore.java:96: error: incompatible types: cannot infer type arguments for HashtagStoreElement<>
                HashtagStoreElement<HashtagElement> tmp2 = new HashtagStoreElement<>(tmp2);
                                                                                  ^
    reason: inference variable E has incompatible bounds
      equality constraints: HashtagElement
      lower bounds: HashtagStoreElement<HashtagElement>
  where E is a type-variable:
    E extends Object declared in class HashtagStoreElement
.\uk\ac\warwick\java\cs126\services\ArrayList.java:68: error: cannot find symbol
            this.array[size-1] = null;
                ^
  symbol: variable array
.\uk\ac\warwick\java\cs126\services\ArrayList.java:83: error: incompatible types: Object[] cannot be converted to E[]
        E[] tmp = new Object[size];
                  ^
  where E is a type-variable:
    E extends Object declared in class ArrayList
.\uk\ac\warwick\java\cs126\services\MergeSort.java:40: error: incompatible types: ArrayList<E> cannot be converted to ArrayList<String>
            merge(left, right, whole);
                  ^
  where E is a type-variable:
    E extends Object declared in class MergeSort
.\uk\ac\warwick\java\cs126\services\MergeSort.java:54: error: bad operand types for binary operator '>'
            if ( c.compare(left.get(leftIndex),right.get(rightIndex) > 0) {
                                                                     ^
  first type:  String
  second type: int
.\uk\ac\warwick\java\cs126\services\MergeSort.java:68: error: incompatible types: ArrayList<String> cannot be converted to ArrayList<E>
            rest = right;
                   ^
  where E is a type-variable:
    E extends Object declared in class MergeSort
.\uk\ac\warwick\java\cs126\services\MergeSort.java:72: error: incompatible types: ArrayList<String> cannot be converted to ArrayList<E>
            rest = left;
                   ^
  where E is a type-variable:
    E extends Object declared in class MergeSort
.\uk\ac\warwick\java\cs126\services\MergeSort.java:78: error: incompatible types: E cannot be converted to String
            whole.set(wholeIndex, rest.get(i));
                                          ^
  where E is a type-variable:
    E extends Object declared in class MergeSort
.\uk\ac\warwick\java\cs126\services\MyLinkedList.java:74: error: cannot find symbol
        E[this.size()] tmp;
        ^
  symbol:   variable E
  location: class MyLinkedList<E>
  where E is a type-variable:
    E extends Object declared in class MyLinkedList
.\uk\ac\warwick\java\cs126\services\MyLinkedList.java:77: error: cannot find symbol
            tmp[i] = ptr.getValue();
            ^
  symbol:   variable tmp
  location: class MyLinkedList<E>
  where E is a type-variable:
    E extends Object declared in class MyLinkedList
Note: Some messages have been simplified; recompile with -Xdiags:verbose to get full output
40 errors
